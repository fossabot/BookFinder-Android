apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: "$rootDir/common-methods.gradle"
apply from: 'build-config.gradle'

final userName = System.getProperty("user.name")
final credentialsFolder = getCredentialsFolder(userName)

final releaseKeystorePath = credentialsFolder + "release-keystore.properties"
final releaseKeystoreProperties = getKeystoreProperties(releaseKeystorePath)
final debugKeystorePath = credentialsFolder + "debug-keystore.properties"
final debugKeystoreProperties = getKeystoreProperties(debugKeystorePath)

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId appId
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [toothpick_registry_package_name: appId]
                includeCompileClasspath = true
            }
        }
    }
    signingConfigs {
        release {
            storeFile file(credentialsFolder + releaseKeystoreProperties['file'])
            keyAlias releaseKeystoreProperties['alias']
            keyPassword releaseKeystoreProperties['password']
            storePassword releaseKeystoreProperties['keystorePassword']
        }
        debug {
            storeFile file(credentialsFolder + debugKeystoreProperties['file'])
            keyAlias debugKeystoreProperties['alias']
            keyPassword debugKeystoreProperties['password']
            storePassword debugKeystoreProperties['keystorePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources true
            minifyEnabled true
            debuggable false
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError true
        checkReleaseBuilds false
        disable 'unchecked'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

ext {
    support_library_version = "27.0.2"
    moxy_version = "1.5.3"
    toothpick_version = "1.1.2"
    retrofit_version = "2.3.0"
}

dependencies {
    implementation(
            "org.jetbrains.anko:anko:$anko_version",
            "com.android.support:appcompat-v7:$support_library_version",
            "com.arello-mobile:moxy-compiler:$moxy_version",
            "com.arello-mobile:moxy-app-compat:$moxy_version",
            "com.squareup.retrofit2:retrofit:$retrofit_version",
            "com.squareup.retrofit2:converter-gson:$retrofit_version",
            "com.squareup.okhttp3:logging-interceptor:3.6.0",
            "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:1.0.0",
            "com.github.stephanenicolas.toothpick:toothpick-runtime:$toothpick_version",
            "com.google.code.gson:gson:2.8.2",
            "com.github.bumptech.glide:glide:4.3.1",
            "ru.terrakok.cicerone:cicerone:3.0.0",
    )
    testImplementation(
            "junit:junit:4.12",
            "org.mockito:mockito-core:2.8.9",
            "com.nhaarman:mockito-kotlin-kt1.1:1.5.0",
    )
    kapt(
            "com.github.stephanenicolas.toothpick:toothpick-compiler:$toothpick_version",
            "com.arello-mobile:moxy-compiler:$moxy_version",
    )
}

configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    }
}